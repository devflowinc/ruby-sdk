=begin
#Trieve API

#Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.

The version of the OpenAPI document: 0.5.0
Contact: developers@trieve.ai
Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for TrieveRubyClient::ChunkApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ChunkApi' do
  before do
    # run before each test
    @api_instance = TrieveRubyClient::ChunkApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChunkApi' do
    it 'should create an instance of ChunkApi' do
      expect(@api_instance).to be_instance_of(TrieveRubyClient::ChunkApi)
    end
  end

  # unit tests for create_chunk
  # Create or Upsert Chunk or Chunks
  # Create or Upsert Chunk or Chunks  Create a new chunk. If the chunk has the same tracking_id as an existing chunk, the request will fail. Once a chunk is created, it can be searched for using the search endpoint.
  # @param tr_dataset The dataset id to use for the request
  # @param create_chunk_data JSON request payload to create a new chunk (chunk)
  # @param [Hash] opts the optional parameters
  # @return [ReturnQueuedChunk]
  describe 'create_chunk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for create_suggested_queries_handler
  # Generate suggested queries
  # Generate suggested queries  This endpoint will generate 3 suggested queries based off the query provided in the request body and return them as a JSON object.
  # @param tr_dataset The dataset id to use for the request
  # @param suggested_queries_request JSON request payload to get alternative suggested queries
  # @param [Hash] opts the optional parameters
  # @return [SuggestedQueriesResponse]
  describe 'create_suggested_queries_handler test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_chunk
  # Delete Chunk
  # Delete Chunk  Delete a chunk by its id. If deleting a root chunk which has a collision, the most recently created collision will become a new root chunk.
  # @param tr_dataset The dataset id to use for the request
  # @param chunk_id Id of the chunk you want to fetch.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_chunk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_chunk_by_tracking_id
  # Delete Chunk By Tracking Id
  # Delete Chunk By Tracking Id  Delete a chunk by tracking_id. This is useful for when you are coordinating with an external system and want to use the tracking_id to identify the chunk. If deleting a root chunk which has a collision, the most recently created collision will become a new root chunk.
  # @param tr_dataset The dataset id to use for the request
  # @param tracking_id tracking_id of the chunk you want to delete
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_chunk_by_tracking_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for generate_off_chunks
  # RAG on Specified Chunks
  # RAG on Specified Chunks  This endpoint exists as an alternative to the topic+message concept where our API handles chat memory. With this endpoint, the user is responsible for providing the context window and the prompt. See more in the \&quot;search before generate\&quot; page at docs.trieve.ai.
  # @param tr_dataset The dataset id to use for the request
  # @param generate_chunks_request JSON request payload to perform RAG on some chunks (chunks)
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'generate_off_chunks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_chunk_by_id
  # Get Chunk By Id
  # Get Chunk By Id  Get a singular chunk by id.
  # @param tr_dataset The dataset id to use for the request
  # @param chunk_id Id of the chunk you want to fetch.
  # @param [Hash] opts the optional parameters
  # @return [ChunkMetadata]
  describe 'get_chunk_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_chunk_by_tracking_id
  # Get Chunk By Tracking Id
  # Get Chunk By Tracking Id  Get a singular chunk by tracking_id. This is useful for when you are coordinating with an external system and want to use your own id as the primary reference for a chunk.
  # @param tr_dataset The dataset id to use for the request
  # @param tracking_id tracking_id of the chunk you want to fetch
  # @param [Hash] opts the optional parameters
  # @return [ChunkMetadata]
  describe 'get_chunk_by_tracking_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_recommended_chunks
  # Get Recommended Chunks
  # Get Recommended Chunks  Get recommendations of chunks similar to the chunks in the request. Think about this as a feature similar to the \&quot;add to playlist\&quot; recommendation feature on Spotify. This request pairs especially well with our groups endpoint.
  # @param tr_dataset The dataset id to use for the request
  # @param recommend_chunks_request JSON request payload to get recommendations of chunks similar to the chunks in the request
  # @param [Hash] opts the optional parameters
  # @return [Array<ChunkMetadataWithFileData>]
  describe 'get_recommended_chunks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for search_chunk
  # Search
  # Search  This route provides the primary search functionality for the API. It can be used to search for chunks by semantic similarity, full-text similarity, or a combination of both. Results&#39; &#x60;chunk_html&#x60; values will be modified with &#x60;&lt;b&gt;&#x60; tags for sub-sentence highlighting.
  # @param tr_dataset The dataset id to use for the request
  # @param search_chunk_data JSON request payload to semantically search for chunks (chunks)
  # @param [Hash] opts the optional parameters
  # @return [SearchChunkQueryResponseBody]
  describe 'search_chunk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_chunk
  # Update Chunk
  # Update Chunk  Update a chunk. If you try to change the tracking_id of the chunk to have the same tracking_id as an existing chunk, the request will fail.
  # @param tr_dataset The dataset id to use for the request
  # @param update_chunk_data JSON request payload to update a chunk (chunk)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_chunk test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_chunk_by_tracking_id
  # Update Chunk By Tracking Id
  # Update Chunk By Tracking Id  Update a chunk by tracking_id. This is useful for when you are coordinating with an external system and want to use the tracking_id to identify the chunk.
  # @param tr_dataset The dataset id to use for the request
  # @param update_chunk_by_tracking_id_data JSON request payload to update a chunk by tracking_id (chunks)
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_chunk_by_tracking_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
