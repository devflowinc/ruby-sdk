=begin
#trieve-server

#Trieve REST API OpenAPI Documentation

The version of the OpenAPI document: 0.3.3

Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::TopicApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TopicApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::TopicApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TopicApi' do
    it 'should create an instance of TopicApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::TopicApi)
    end
  end

  # unit tests for create_topic
  # create_topic
  # create_topic  Create a new chat topic. Topics are attached to a user and act as a coordinator for memory of gen-AI chat sessions. We are considering refactoring this resource of the API soon.
  # @param tr_dataset The dataset id to use for the request
  # @param create_topic_data JSON request payload to create chat topic
  # @param [Hash] opts the optional parameters
  # @return [Topic]
  describe 'create_topic test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_topic
  # delete_topic
  # delete_topic  Delete an existing chat topic. When a topic is deleted, all associated chat messages are also deleted.
  # @param tr_dataset The dataset id to use for the request
  # @param delete_topic_data JSON request payload to delete a chat topic
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_topic test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_all_topics_for_user
  # get_all_topics_for_user
  # get_all_topics_for_user  Get all topics belonging to a the auth&#39;ed user. Soon, we plan to allow specification of the user for this route and include pagination.
  # @param user_id The id of the user to get topics for
  # @param tr_dataset The dataset id to use for the request
  # @param [Hash] opts the optional parameters
  # @return [Array<Topic>]
  describe 'get_all_topics_for_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_topic
  # update_topic
  # update_topic  Update an existing chat topic. Currently, only the name of the topic can be updated.
  # @param tr_dataset The dataset id to use for the request
  # @param update_topic_data JSON request payload to update a chat topic
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_topic test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
