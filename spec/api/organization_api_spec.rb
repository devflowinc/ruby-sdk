=begin
#trieve-server

#Trieve REST API OpenAPI Documentation

The version of the OpenAPI document: 0.3.3

Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenapiClient::OrganizationApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrganizationApi' do
  before do
    # run before each test
    @api_instance = OpenapiClient::OrganizationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrganizationApi' do
    it 'should create an instance of OrganizationApi' do
      expect(@api_instance).to be_instance_of(OpenapiClient::OrganizationApi)
    end
  end

  # unit tests for create_organization
  # create_organization
  # create_organization  Create a new organization. The auth&#39;ed user who creates the organization will be the default owner of the organization.
  # @param create_organization_data The organization data that you want to create
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'create_organization test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_organization_by_id
  # delete_organization
  # delete_organization  Delete an organization by its id. The auth&#39;ed user must be an owner of the organization to delete it.
  # @param tr_organization The organization id to use for the request
  # @param organization_id The id of the organization you want to fetch.
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'delete_organization_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_by_id
  # get_organization
  # get_organization  Fetch the details of an organization by its id. The auth&#39;ed user must be an admin or owner of the organization to fetch it.
  # @param tr_organization The organization id to use for the request
  # @param organization_id The id of the organization you want to fetch.
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'get_organization_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_usage
  # get_organization_usage
  # get_organization_usage  Fetch the current usage specification of an organization by its id. The auth&#39;ed user must be an admin or owner of the organization to fetch it.
  # @param tr_organization The organization id to use for the request
  # @param organization_id The id of the organization you want to fetch the usage of.
  # @param [Hash] opts the optional parameters
  # @return [OrganizationUsageCount]
  describe 'get_organization_usage test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_organization_users
  # get_organization_users
  # get_organization_users  Fetch the users of an organization by its id. The auth&#39;ed user must be an admin or owner of the organization to fetch it.
  # @param tr_organization The organization id to use for the request
  # @param organization_id The id of the organization you want to fetch the users of.
  # @param [Hash] opts the optional parameters
  # @return [Array<SlimUser>]
  describe 'get_organization_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_organization
  # update_organization
  # update_organization  Update an organization. Only the owner of the organization can update it.
  # @param tr_organization The organization id to use for the request
  # @param update_organization_data The organization data that you want to update
  # @param [Hash] opts the optional parameters
  # @return [Organization]
  describe 'update_organization test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
